<?xml version="1.0"?>
<configuration>

  <connectionStrings>
      <add name="Geckon.Octopus.Data.Properties.Settings.OctopusConnectionString" connectionString="Data Source=mssql.server00.geckon.com;Initial Catalog=Octopus;Persist Security Info=True;User ID=sa;Password=GECKONpbvu7000"/>
  </connectionStrings>

  <system.web>
    <compilation debug="true" targetFramework="4.0" />
  </system.web>

  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true">
      <add name="UrlRoutingModule" type="System.Web.Routing.UrlRoutingModule, System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
    </modules>
  </system.webServer>

  <system.serviceModel>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true"
      multipleSiteBindingsEnabled="true" />

    <services>
      <service name="Geckon.Octopus.Controller.Service.Web.OctopusService" behaviorConfiguration="Geckon.Octopus.OctopusServiceBehavior">
        <endpoint address=""
                  behaviorConfiguration="WebBehavior"
                  binding="webHttpBinding"
                  contract="Geckon.Octopus.Controller.Service.Web.IOctopusService" />
      </service>
    </services>

    <behaviors>
      <endpointBehaviors>
        <behavior name="WebBehavior">
          <customWebHttp />
        </behavior>
      </endpointBehaviors>
      <serviceBehaviors>
        <behavior name="Geckon.Octopus.OctopusServiceBehavior">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
        <behavior name="">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="false" />
        </behavior>
      </serviceBehaviors>
    </behaviors>

    <extensions>
      <behaviorExtensions>
        <add name="customWebHttp" type="Geckon.Web.WCF.McmHttpBehaviorExtensionElement, Geckon, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
      </behaviorExtensions>
    </extensions>

  </system.serviceModel>

</configuration>
